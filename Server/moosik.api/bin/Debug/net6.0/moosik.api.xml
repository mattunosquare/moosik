<?xml version="1.0"?>
<doc>
    <assembly>
        <name>moosik.api</name>
    </assembly>
    <members>
        <member name="M:moosik.api.Controllers.AuthenticationController.Authenticate(moosik.api.ViewModels.Authentication.AuthenticationRequestViewModel)">
            <summary>
            Returns the authenticated user with a generated JWT token.
            </summary>
            <param name="authenticationRequestViewModel"></param>
            <returns>The authenticated user with a generated JWT token</returns>
            <response code="200">Success - AuthenticationResponseViewModel successfully returned</response>
            <response code="400">Bad Request - Check input values</response>
            <response code="404">Not Found</response>
        </member>
        <member name="M:moosik.api.Controllers.PostController.GetAllPost(System.Nullable{System.Int32})">
            <summary>
            Returns a list of all post object. Filters posts matching threadId if provided.
            <param name="threadId"></param>
            </summary>
            <returns>A list of PostViewModels</returns>
            <response code="200">Success - List has been successfully returned</response>
            <response code="400">Bad Request - Check input values</response>
            <response code="404">Not Found - No such list exists</response>
        </member>
        <member name="M:moosik.api.Controllers.PostController.GetPostById(System.Int32)">
            <summary>
            Finds the post matching a given postId
            </summary>
            <param name="postId" example = "2"></param>
            <remarks>
            Sample request:
                URL: www.moosik.com/post/2
            </remarks>
            <returns>Post object matching the given id parameter</returns>
            <response code="200">Success - Post has been successfully returned</response>
            <response code="400">Bad Request - Check input values</response>
            <response code="404">Not Found - Given Post does not exist</response>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:moosik.api.Controllers.PostController.GetPostsAfterDate(System.DateTime)">
            <summary>
            Returns all Post objects that occur after the provided date
            </summary>
            <param name="date" example="2008-10-31T17:04:32"></param>
            <remarks>
            Sample request:
                URL: www.moosik.com/post?date=2008-10-31T17:04:32
            </remarks>
            <returns>List of Post objects containing all Posts that occur after a provided date</returns>
            <response code="200">Success - List of Posts has been successfully returned</response>
            <response code="400">Bad Request - Check input values</response>
            <response code="404">Not Found - No such list exists</response>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:moosik.api.Controllers.PostController.UpdatePost(System.Int32,moosik.api.ViewModels.UpdatePostViewModel)">
            <summary>
            Updates the Post object matching the provided postId with the data provided in the body.
            </summary>
            <param name="updatePostViewModel"></param>
            <param name="postId"></param>
            <remarks>
            Sample request:
            
                Body:
                {
                    description: "Cool Song"
                }
            </remarks>
            <returns>No content returned</returns>
            <response code="204">No content returned</response>
            <exception cref="T:moosik.services.Exceptions.NotFoundException"></exception>
        </member>
        <member name="M:moosik.api.Controllers.PostController.CreatePost(moosik.api.ViewModels.CreatePostViewModel,System.Int32)">
             <summary>
             Creates a new Post on the provided threadId in the route.
             </summary>
             <remarks>
             Sample request:
            
                 Body:
                 {
                     UserId: 7,
                     Description: "Check this song out",
                     Resource:{
                         Title: "Hey Jude",
                         Value: "youtube.com/heyjude",
                         TypeId: 1
                     }       
                 }
             </remarks>
             <param name="createPostViewModel"></param>
             <param name="threadId" example="1" ></param>
             <returns>Newly created Post, provided it has been created, otherwise an error code</returns>
             <response code="204">No content returned</response>
        </member>
        <member name="M:moosik.api.Controllers.PostController.DeletePost(System.Int32)">
            <summary>
            Deletes(sets 'Active' property to false) the Post matching the provided postId
            </summary>
            <param name="postId"></param>
            <returns>No content returned</returns>
            <exception cref="T:moosik.services.Exceptions.NotFoundException"></exception>
        </member>
        <member name="M:moosik.api.Controllers.PostController.UpdatePostResource(System.Int32,moosik.api.ViewModels.UpdatePostResourceViewModel)">
            <summary>
            Updates the PostResource object matching the provided postResourceId with the data provided in the body.
            </summary>
            <param name="updatePostResourceViewModel"></param>
            <param name="postResourceId"></param>
            <remarks>
            Sample request:
            
                Body:
                {
                    Title: "Enter Sandman",
                    Value: "youtube.com/enterSandman"
                }
            </remarks>
            <returns>No content returned</returns>
            <response code="204">No content returned</response>
            <exception cref="T:moosik.services.Exceptions.NotFoundException"></exception>
        </member>
        <member name="M:moosik.api.Controllers.PostController.GetAllResourceTypes">
            <summary>
            Get all ResourceTypes
            </summary>
            <returns>An array of all ResourceTypeViewModels</returns>
            <response code="200">Success - Array of all ResourceTypeViewModels returned</response>
            <response code="404">Not Found - No such list exists</response>
        </member>
        <member name="M:moosik.api.Controllers.ThreadController.GetAllThreads(System.Nullable{System.Int32})">
            <summary>
            Returns list of all ThreadViewModels
            </summary>
            <returns>An array of all ThreadViewModels. Filters by userId if parameter is provided</returns>
            <response code="200">Success - List of ThreadViewModels has been successfully returned</response>
            <response code="400">Bad Request - Check input values</response>
            <response code="404">Not Found - No such list exists</response>
        </member>
        <member name="M:moosik.api.Controllers.ThreadController.GetThreadById(System.Int32)">
            <summary>
            Finds the Thread matching a given threadId
            </summary>
            <param name="threadId"></param>
            <returns>Thread object matching the given id parameter</returns>
            <response code="200">Success - Thread has been successfully returned</response>
            <response code="400">Bad Request - Check input values</response>
            <response code="404">Not Found - Given Post does not exist</response>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:moosik.api.Controllers.ThreadController.GetThreadsAfterDate(System.DateTime)">
            <summary>
            Returns all Thread objects that occur after the provided date
            </summary>
            <param name="date" example="2008-10-31T17:04:32"></param>
            <remarks>
            Sample request:
                URL: www.moosik.com/thread?date=2008-10-31T17:04:32
            </remarks>
            <returns>List of Thread objects containing all Threads that occur after a provided date</returns>
            <response code="200">Success - List of Threads has been successfully returned</response>
            <response code="400">Bad Request - Check input values</response>
            <response code="404">Not Found - No such list exists</response>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:moosik.api.Controllers.ThreadController.UpdateThread(System.Int32,moosik.api.ViewModels.Thread.UpdateThreadViewModel)">
             <summary>
             Updates the Thread object matching the provided threadId using the data from the body 
             </summary>
             <param name="updateThreadViewModel"></param>
             <param name="threadId"></param>
             <remarks>
             Sample request:
            
                 Body:
                 {
                     title: "Need a good song please"
                 }
             </remarks>
             <returns>No content returned</returns>
             <response code="200">No content returned</response>
             <exception cref="T:moosik.services.Exceptions.NotFoundException"></exception>
        </member>
        <member name="M:moosik.api.Controllers.ThreadController.CreateThread(moosik.api.ViewModels.CreateThreadViewModel)">
             <summary>
             Creates a new Thread using the provided CreateThreadViewModel
             </summary>
             <remarks>
             Sample request:
            
                 Body:
                 {
                     Title: "Need song for gym please",
                     UserId: 1,
                     ThreadTypeId: 2,
                     Post: {
                         UserId: 1,
                         Description: "Doing cardio this evening, need music please.",
                         Resource: {
                             Title: "Hey Jude",
                             Value: "youtube.com/heyjude"
                             TypeId: 1
                         }
                     }
                 }
             </remarks>
             <param name="createThreadViewModel"></param>
             <returns>Newly created Thread provided it has been created, otherwise an error code</returns>
             <response code="201">Success - Post has been successfully created</response>
             <response code="400">Bad Request - Check input values</response>
        </member>
        <member name="M:moosik.api.Controllers.ThreadController.DeleteThread(System.Int32)">
            <summary>
            Deletes(sets 'Active' property to false) the Thread matching the provided threadId
            </summary>
            <param name="threadId"></param>
            <returns>No content returned.</returns>
            <exception cref="T:moosik.services.Exceptions.NotFoundException"></exception>
        </member>
        <member name="M:moosik.api.Controllers.ThreadController.GetAllThreadTypes">
            <summary>
            Gets all ThreadTypes
            </summary>
            <returns>An array of all ThreadTypeViewModels</returns>
            <response code="200">Success - Array of all ThreadTypeViewModels returned</response>
            <response code="404">Not Found - No such array exists</response>
        </member>
        <member name="M:moosik.api.Controllers.UserController.GetAllUsers(System.Nullable{System.Int32})">
            <summary>
            Get list of all users
            </summary>
            <returns>A list containing all users</returns>
            <response code="200">Success - List has been successfully returned</response>
            <response code="400">Bad Request - Check input values</response>
            <response code="404">Not Found - No such list exists</response>
        </member>
        <member name="M:moosik.api.Controllers.UserController.GetUserById(System.Int32)">
            <summary>
            Finds the User matching a given userId
            </summary>
            <param name="userId"></param>
            <returns>User object matching the given userId parameter</returns>
            <response code="200">Success - User has been successfully returned</response>
            <response code="400">Bad Request - Check input values</response>
            <response code="404">Not Found - Given Post does not exist</response>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:moosik.api.Controllers.UserController.GetUserByUsernameAndEmail(System.String,System.String)">
            <summary>
            Returns all User objects that matches the given parameters
            </summary>
            <param name="username" example="lennon_01"></param>
            <param name="email" example="j_lennon@beatles.com"></param>
            <remarks>Sample request:
            URL: www.moosik.com/user?username=lennon_01email=j_lennon@beatles.com
            </remarks>
            <returns>User object matching the provided username and email address</returns>
            <response code="200">Success - User has been successfully returned</response>
            <response code="400">Bad Request - Check input values</response>
            <response code="404">Not Found - No such user matches the provided arguments</response>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:moosik.api.Controllers.UserController.UpdateUser(System.Int32,moosik.api.ViewModels.User.UpdateUserViewModel)">
            <summary>
            Updates the User object matching the provided UserId with the data provided in the body.
            </summary>
            <param name="updateUserViewModel"></param>
            <param name="userId"></param>
            <remarks>
            Sample request:
            
                Body:
                {
                     username: "ringo_01",
                     email: "ringo_01@beatles.com"
                }
            </remarks>
            <returns>No content returned.</returns>
            <response code="204">No content returned.</response>
            <exception cref="T:moosik.services.Exceptions.NotFoundException"></exception>
        </member>
        <member name="M:moosik.api.Controllers.UserController.CreateUser(moosik.api.ViewModels.User.CreateUserViewModel)">
            <summary>
            Creates a new User
            </summary>
            <remarks>
            Sample request:
            
                Body:
                {
                    username: "mccartney_01",
                    password: "Password123",
                    email: "mccartney_01@beatles.com"
                }
            </remarks>
            <param name="createUserViewModel"></param>
            <returns>No content returned</returns>
            <response code="204">No content returned.</response>
        </member>
        <member name="M:moosik.api.Controllers.UserController.DeleteUser(System.Int32)">
            <summary>
            Deletes(sets 'Active' property to false) the User matching the provided userId
            </summary>
            <param name="userId"></param>
            <returns>No content returned.</returns>
            <exception cref="T:moosik.services.Exceptions.NotFoundException"></exception>
        </member>
    </members>
</doc>
